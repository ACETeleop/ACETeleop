Metadata-Version: 2.1
Name: ace_teleop
Version: 0.1.0
Summary: Core elements of ACE-teleoperation system
Author: Shiqi Yang, Minghuan Liu, Jialong Li, Xuxin Cheng.
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: pin
Requires-Dist: nlopt
Requires-Dist: dex_retargeting==0.1.1
Requires-Dist: pytransform3d
Requires-Dist: opencv-python
Requires-Dist: mediapipe

<h1 align="center"> ACE: A Cross-platfrom Visual-Exoskeletons
for Low-Cost Dexterous Teleoperation </h1>

<p align="center">
    <a href="https://shiqiyang.github.io" style="font-size: 20px;">
        Shiqi Yang
    </a>
    ·
    <a href="https://minghuanliu.com" style="font-size: 20px;">
        Minghuan Liu
    </a>
    ·
    <a href="https://yzqin.github.io" style="font-size: 20px;">
        Yuzhe Qin
    </a>
    ·
    <a href="https://dingry.github.io" style="font-size: 20px;">
        Runyu Ding
    </a>
    ·
    <a href="https://ace-teleop.github.io" style="font-size: 20px;">
        Jialong Li
    </a>
    <br>
    <a href="https://chengxuxin.github.io" style="font-size: 20px;">
        Xuxin Cheng
    </a>
    ·
    <a href="https://rchalyang.github.io" style="font-size: 20px;">
        Ruihan Yang
    </a>
    ·
    <a href="https://www.cs.cmu.edu/~shayi/" style="font-size: 20px;">
        Sha Yi
    </a>
    ·
    <a href="https://xiaolonw.github.io" style="font-size: 20px;">
        Xiaolong Wang
    </a>
</p>

<h2 align="center"> UC San Diego </h2>

<p align="center">
<h3 align="center"><a href="https://ace-teleop.github.io/">Demos</a> | <a href="https://arxiv.org/">arXiv</a>
  <div align="center"></div>
</p>

## Introduction
This is the core controller of the ACE teleoperation system, which receive the encoded message (including human wrist position and hand pose) from the ACE server, and explain as commands (i.e., joint positions of the robot arm and hands) through inverse kinematics (IK) and hand retargeting to control different robots (e.g., h1 w. inspire hands, gr1, xarm w. ability hands, franka panda, etc.) in simulation (also can be used in the real world).

## Prepare:
```python
# Install avp_stream

git clone git@github.com:Improbable-AI/VisionProTeleop.git
cd VisionProTeleop && pip install -e .

# Install ace_teleop (this repo)

pip install -e .
```

## ACE Server (reading necessary poses from ACE hardware or your keyboard)

### Start Server
python3 ace_server.py

### Calibration
#### Get Offset
```python
python3 hardware/calibration/get_offset.py --port /dev/serial/by-id/usb-FTDI_USB__-__Serial_Converter_FT8J0QI3-if00-port0 --type left
```

#### Test Calibration
```python
python hardware/calibration/test_calibration.py --port /dev/serial/by-id/usb-FTDI_USB__-__Serial_Converter_FT8J0QI3-if00-port0 --type left
```

### Find Cam index and test the Cam FPS
```python
python3 tools/find_webcam.py
```

use "k" to find next cam

## ACE Controller (Process the poses and map to robot platforms to control a set of robots)

### Running in Simulation
We provide the code in controlling robots in simulation. Real-world control can be adapted from this. Note that the system will check you palms are in init positions (both hands open) before running.

```python
python ace_teleop.py --robot h1_inspire
```

## Acknowlegments
This code base refers a lot to many previous amazing works like [BunnyVisionPro](https://github.com/Dingry/bunny_teleop_server) and [OpenTeleVision](https://github.com/OpenTeleVision/TeleVision). Also, the codes are built on some superior public project, such as [pinocchio](https://github.com/stack-of-tasks/pinocchio) and [dex-retargeting](https://github.com/dexsuite/dex-retargeting).
